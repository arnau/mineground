defmodule Mineground.BoardTest do
  use ExUnit.Case
  use ExVCR.Mock, adapter: ExVCR.Adapter.Hackney

  alias Mineground.Board

  test "move once" do
    use_cassette "board move 0 0" do
      assert Board.move(0, 0)
    end
  end

  test "initial state" do
    raw =
      File.read!("test/initial_state.json")
      |> Poison.decode!()

    actual = Board.to_string(raw)
    expected = """
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               ********************
               """

    assert actual == expected
  end

  test "After {0, 13} move" do
    raw =
      File.read!("test/move_0_13_state.json")
      |> Poison.decode!()

    actual = Board.to_string(raw)
    expected = """
               ....................
               ....................
               ....................
               ....................
               ....................
               ....................
               .........111......11
               .........1*1......1*
               .........111......1*
               .................11*
               .111...111.......1**
               .1*1...1*1.......1**
               .111...111......11**
               ................1***
               ................12**
               11...........111.111
               *1...........1*1....
               *2...........111....
               *1..................
               *1..................
               """

    assert actual == expected
  end

end
